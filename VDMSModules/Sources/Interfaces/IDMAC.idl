import "oaidl.idl";

import "IDMAHandlers.idl";

[
	object,
	uuid(7573F1D0-05C6-11d5-9C72-00A024112F81),
	helpstring(""),
	pointer_default(unique)
]
interface IDMAController : IUnknown
{
	[ helpstring("Adds a handler for a DMA channel") ]
	HRESULT AddDMAHandler(
		[in] BYTE channel,                  // DMA channel
		[in] IDMAHandler * handler );       // The handler

	[ helpstring("Removes a handler from a DMA channel") ]
	HRESULT RemoveDMAHandler(
		[in] BYTE channel,                  // DMA channel
		[in] IDMAHandler * handler );       // The handler

	[ helpstring("Starts a DMA transfer on a channel") ]
	HRESULT StartTransfer(
		[in] BYTE channel,                  // DMA channel to start transfer on
		[in] BOOL synchronous );            // Indicates whether the operation should be synchronous

	[ helpstring("Aborts an existing DMA transfer") ]
	HRESULT StopTransfer(
		[in] BYTE channel,                  // DMA channel to abort transfer on
		[in] BOOL synchronous );            // Indicates whether the operation should be synchronous
};



/////////////////////////////////////////////////////////////////////////////



[
	uuid(82DD8820-05C6-11d5-9C72-00A024112F81),
	version(1.0),
	helpstring("DMAC 1.0 Definition Type Library")
]
library IDMACLib
{
	interface IDMAController;
};
