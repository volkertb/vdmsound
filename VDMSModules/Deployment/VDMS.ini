;--------------------------------------------------------------------------------------
; Declare additional modules here ...
;--------------------------------------------------------------------------------------

;
; MPU 401 emulation
;

;--------------------------------------------------------------------------------------
; This module emulates a MPU-401 interface card.  It accepts as well as generates MIDI
; messages (MIDI-in, MIDI-out).
;--------------------------------------------------------------------------------------

[MPU401 Controller]
CLSID   = EmuMPU401.MPU401Ctl
Path    = EmuMPU401.dll

[MPU401 Controller.depends]
VDMSrv  = VDMServicesProvider
MidiOut = MIDI Mapper

[MPU401 Controller.config]
port    = 0x330         ; usually 0x300 or 0x330
IRQ     = 2             ; usually 2

;--------------------------------------------------------------------------------------
; This module is used to convert MIDI messages between MT-32 and GM
;--------------------------------------------------------------------------------------

[MIDI Mapper]
CLSID   = MIDIToolkit.MIDIMapper
Path    = MIDIToolkit.dll

[MIDI Mapper.depends]
MidiOut = MIDI Player

[MIDI Mapper.config]
MapFile = identity.map  ; translates between the MIDI devices selected in games and the one in your system

;--------------------------------------------------------------------------------------
; This module is used to play back MIDI messages on a Windows MIDI-out device
;--------------------------------------------------------------------------------------

[MIDI Player]
CLSID   = MIDIDevice.MIDIOut
Path    = MIDIDevice.dll

[MIDI Player.depends]
MidiOut = SysEx Indicator

[MIDI Player.config]
device  = -1            ; -1 = the MIDI mapper, 0 = first device, 1 = second, etc.

;--------------------------------------------------------------------------------------
; This module is used to have a keyboard led blink whenever a SysEx message is
; transmitted.  Useful for most Sierra games, where SysEx transfers are lengthy
;--------------------------------------------------------------------------------------

[SysEx Indicator]
CLSID   = MIDIIndicator.ActivityLights
Path    = MIDIIndicator.dll

[SysEx Indicator.config]
led     = Scroll        ; the indicator led - can be either of Num, Caps or Scroll

;
; SoundBlaster emulation
;

;--------------------------------------------------------------------------------------
; This module manages DMA transfers
;--------------------------------------------------------------------------------------

[DMA Transfer Manager]
CLSID   = DMAController.TransferMgr
Path    = DMAController.dll

[DMA Transfer Manager.depends]
VDMSrv  = VDMServicesProvider

[DMA Transfer Manager.config]
minDMAPeriod = 5   ; these regulate the frequency of DMA ...
maxDMAPeriod = 15  ; ... activity (polling and updating)

;--------------------------------------------------------------------------------------
; This module emulates a SoundBlaster-compatible card.
;--------------------------------------------------------------------------------------

[SB Controller]
CLSID   = EmuSBCompat.SBCompatCtl
Path    = EmuSBCompat.dll

[SB Controller.depends]
VDMSrv  = VDMServicesProvider
DMACtl  = DMA Transfer Manager
WaveOut = Wave Player

[SB Controller.config]
version = 4.15      ; 1.05 for SB1.x, 2.01 for SB2, 3.02 for SBPro, 4.05 for SB16
port    = 0x220     ; usually 0x220 (can also be 210, 230, 240, 250, 260 or 280)
IRQ     = 7         ; usually 5 or 7
DMA8    = 1         ; usually 1
DMA16   = 5         ; usually 5

;; forceSampleRate = 22050
;; forceNumBits    = 16
;; forceChannels   = 2

;--------------------------------------------------------------------------------------
; This module is used to play back Wave data on a Windows Wave-out device
;--------------------------------------------------------------------------------------

[Wave Player]
CLSID   = WaveDevice.WaveOut
Path    = WaveDevice.dll

;; [Wave Player.depends]
;; waveOut = Wave Writer

[Wave Player.config]
device  = -1    ; -1 = the Wave mapper, 0 = first device, 1 = second, etc.
buffer  = 75    ; how many milliseconds of audio data to buffer

;--------------------------------------------------------------------------------------
; This module is used to dump Wave data to a raw PCM file
;--------------------------------------------------------------------------------------

;; [Wave Writer]
;; CLSID   = DiskWriter.WaveOut
;; Path    = DiskWriter.dll

;--------------------------------------------------------------------------------------
; This module emulates up to two analogue joysticks
;--------------------------------------------------------------------------------------

[Joystick Controller]
CLSID   = EmuJoystick.EmuJoysticks
Path    = EmuJoystick.dll

[Joystick Controller.depends]
VDMSrv  = VDMServicesProvider

[Joystick Controller.config]
port        = 0x201     ; usually 0x201
minCoord    = 5         ; upper and left range trimming, 0 gives maximum range
maxCoord    = 250       ; bottom and right range trimming, decrease to boost joystick sensitivity, increase if jerky
pollPeriod  = 125       ; how many milliseconds should elapse between periodic joystick updates
